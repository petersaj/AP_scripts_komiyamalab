%% Get activity to correct/incorrect trials after first reversal

% split aligned activity into pyr/gad
aligned_df_gad = cellfun(@(x,y) cellfun(@(z) z(:,:,mice(y).interneurons),...
    x(cellfun(@(r) ~isempty(r),x)),'uni',false), aligned_df_all,mice_idx,'uni',false);
aligned_df_pyr = cellfun(@(x,y) cellfun(@(z) z(:,:,setdiff(1:size(z,3),mice(y).interneurons)),...
    x(cellfun(@(r) ~isempty(r),x)),'uni',false), aligned_df_all,mice_idx,'uni',false);

% Get activity surrounding reversals
%surrounding_trials = 50;
%all_reversals = cellfun(@(x) cellfun(@(y) find(diff(y(:,2)) ~= 0),x,'uni',false), ...
%    odor_trials_all,'uni',false); 
%reversals = cellfun(@(x) cellfun(@(y) num2cell(y(y > surrounding_trials)), ...
%    x,'uni',false),all_reversals,'uni',false); 

% Using all trials for now (has to be > 10 trials in though, those are
% mistakes, also has to be at least 20 CL trials after reversal)
surrounding_trials = 5000;
all_reversals = cellfun(@(x) cellfun(@(y) find(diff(y(:,2)) ~= 0)+1,x,'uni',false), ...
   odor_trials_all,'uni',false); 
remaining_CL_trials = cellfun(@(x) cellfun(@(x) flipud(cumsum(flipud(x(:,1)))),x, ...
    'uni',false),condition_trials_all,'uni',false);
use_reversals = cellfun(@(rev,cl) cellfun(@(rev,cl) num2cell(rev(rev > 10 & ...
    cl(rev) >= 20)),rev,cl,'uni',false),all_reversals,remaining_CL_trials,'uni',false); 
use_reversals_newcontingency = cellfun(@(rev,odor) cellfun(@(rev,odor) ...
    odor(vertcat(rev{:}),2),rev,odor,'uni',false), ...
    use_reversals,odor_trials_all,'uni',false);

within_reversals_trials = cellfun(@(reversals,odor) cellfun(@(reversals,odor) ...
    mat2cell([1;reshape(repmat(vertcat(reversals{:}),1,2)',[],1);size(odor,1)], ...
    repmat(2,length(reversals)+1,1)),reversals,odor,'uni',false),use_reversals, ...
    odor_trials_all,'uni',false);

pre_reversal_activity = cellfun(@(df,bhv,reversal,revtrials) ...
    cellfun(@(df,bhv,reversal,revtrials) ...
    cellfun(@(reversal,revtrials) df(find(bhv(revtrials(1):revtrials(2)-1,1),surrounding_trials, ...
    'last')+revtrials(1)-1,:,:),reversal(1:end),revtrials(1:length(reversal)),'uni',false), ...
    df,bhv,reversal,revtrials,'uni',false),aligned_df_pyr, ...
    condition_trials_all,use_reversals,within_reversals_trials,'uni',false);

post_reversal_activity_CL = cellfun(@(df,bhv,reversal,revtrials) ...
    cellfun(@(df,bhv,reversal,revtrials) ...
    cellfun(@(reversal,revtrials) df(find(bhv(revtrials(1):revtrials(2)-1,1),surrounding_trials, ...
    'last')+revtrials(1)-1,:,:),reversal(1:end),revtrials(2:end),'uni',false), ...
    df,bhv,reversal,revtrials,'uni',false),aligned_df_pyr, ...
    condition_trials_all,use_reversals,within_reversals_trials,'uni',false);

post_reversal_activity_IL = cellfun(@(df,bhv,reversal,revtrials) ...
    cellfun(@(df,bhv,reversal,revtrials) ...
    cellfun(@(reversal,revtrials) df(find(bhv(revtrials(1):revtrials(2)-1,3),surrounding_trials, ...
    'last')+revtrials(1)-1,:,:),reversal(1:end),revtrials(2:end),'uni',false), ...
    df,bhv,reversal,revtrials,'uni',false),aligned_df_pyr, ...
    condition_trials_all,use_reversals,within_reversals_trials,'uni',false);

% Get binary active/inactive
pre_reversal_activity_binaryactive = cellfun(@(df) cellfun(@(df) cellfun(@(df)...
    permute(any(df,2),[1 3 2]),df,'uni',false),df,'uni',false), ...
    pre_reversal_activity,'uni',false);

post_reversal_activity_CL_binaryactive = cellfun(@(df) cellfun(@(df) cellfun(@(df)...
    permute(any(df,2),[1 3 2]),df,'uni',false),df,'uni',false), ...
    post_reversal_activity_CL,'uni',false);

post_reversal_activity_IL_binaryactive = cellfun(@(df) cellfun(@(df) cellfun(@(df)...
    permute(any(df,2),[1 3 2]),df,'uni',false),df,'uni',false), ...
    post_reversal_activity_IL,'uni',false);

% Get fraction binary active/inactive
pre_reversal_activity_fracbinaryactive = cellfun(@(df) cellfun(@(df) ...
    cellfun(@nanmean,df,'uni',false),df,'uni',false), ...
    pre_reversal_activity_binaryactive,'uni',false);

post_reversal_activity_CL_fracbinaryactive = cellfun(@(df) cellfun(@(df) ...
    cellfun(@nanmean,df,'uni',false),df,'uni',false), ...
    post_reversal_activity_CL_binaryactive,'uni',false);

post_reversal_activity_IL_fracbinaryactive = cellfun(@(df) cellfun(@(df) ...
    cellfun(@nanmean,df,'uni',false),df,'uni',false), ...
    post_reversal_activity_IL_binaryactive,'uni',false);

% TO DO HERE: 1) find significantly above-zero, probably do by
% bootstrapping percentages and then 95% confidence interval-ing
% 2) track cells over days/reversals: find distance from the unity line and
% plot over time

reversal_activity_CL_diff = cellfun(@(pre,post) cellfun(@(pre,post) cellfun(@(pre,post) ...
    post-pre,pre,post,'uni',false),pre,post,'uni',false),pre_reversal_activity_fracbinaryactive, ...
    post_reversal_activity_CL_fracbinaryactive,'uni',false);

% % Find reversal significance via bootstrap
% pre_reversal_activity_bootci = cellfun(@(activity) cellfun(@(activity) ...
%     cellfun(@(activity) bootci(10000,@(x) nanmean(x,1),activity),activity,'uni',false), ...
%     activity,'uni',false),pre_reversal_activity_binaryactive,'uni',false);
% post_reversal_activity_CL_bootci = cellfun(@(activity) cellfun(@(activity) ...
%     cellfun(@(activity) bootci(10000,@(x) nanmean(x,1),activity),activity,'uni',false), ...
%     activity,'uni',false),post_reversal_activity_CL_binaryactive,'uni',false);
% 
% % Significance = outside of conf interval AND over 20% in either condition
% reversal_sigdiff_cells = cellfun(@(pre,post) cellfun(@(pre,post) cellfun(@(pre,post) ...
%     -1*(pre(1,:) > post(2,:)) + 1*(post(1,:) > pre(2,:)) .* ...
%     (median(pre) > 0.2 | median(post) > 0.2),pre,post,'uni',false), ...
%     pre,post,'uni',false),pre_reversal_activity_bootci,post_reversal_activity_CL_bootci,'uni',false);

% DO SIGNIFICANCE WITH CHI SQUARE HERE INSTEAD (= bootstrap?)
% test for significance
p_reversal = cellfun(@(pre,post) cellfun(@(pre,post) cellfun(@(pre,post) ...
    AP_chisquare_matrix(pre,post),pre,post,'uni',false),pre,post,'uni',false), ...
    pre_reversal_activity_binaryactive,post_reversal_activity_CL_binaryactive,'uni',false);

% Significance = outside of conf interval AND over 20% in either condition
reversal_sigdiff_cells = cellfun(@(pre,post,p) cellfun(@(pre,post,p) cellfun(@(pre,post,p) ...
    (p < 0.05) .*...
    (-1*(nanmean(pre,1) > nanmean(post,1)) + 1*(nanmean(post,1) > nanmean(pre,1))) .* ...
    (max([nanmean(pre,1);nanmean(post,1)]) > 0.2),pre,post,p,'uni',false),...
    pre,post,p,'uni',false),pre_reversal_activity_binaryactive, ...
    post_reversal_activity_CL_binaryactive,p_reversal,'uni',false);


%% Plot the pre/post active trials (from above)
animal = 3;
session = 6;
reversal = 1;
%figure; hold on;
%dcm_obj = datacursormode;
%set(dcm_obj,'UpdateFcn',@AP_datatip_callback);

sig_color = zeros(length(reversal_sigdiff_cells{animal}{session}{reversal}),3);
sig_color(reversal_sigdiff_cells{animal}{session}{reversal}~=0,1) = 1;

scatter(pre_reversal_activity_fracbinaryactive{animal}{session}{reversal}, ...
    post_reversal_activity_CL_fracbinaryactive{animal}{session}{reversal}, ...
    30*ones(size(sig_color,1),1),sig_color,'fill');

line([0 1],[0 1]);
xlabel('Pre active fraction')
ylabel('Post active fraction')
title(['Animal ' num2str(animal) ', Session ' num2str(session) ...
    ', Reversal ' num2str(reversal)]);

% use this to get contingency switched to: use_reversals_newcontingency



%% Check for significance in non-reversal sessions for false positives

reversal_animals = [1 2 3];

surrounding_trials = 5000;
all_reversals = cellfun(@(x) cellfun(@(y) find(diff(y(:,2)) ~= 0)+1,x,'uni',false), ...
   odor_trials_all,'uni',false); 

elapsed_CL_trials = cellfun(@(x) cellfun(@(x) cumsum(x(:,1)),x, ...
    'uni',false),condition_trials_all,'uni',false);
remaining_CL_trials = cellfun(@(x) cellfun(@(x) flipud(cumsum(flipud(x(:,1)))),x, ...
    'uni',false),condition_trials_all,'uni',false);

% At the moment: make the fake reversal on day 5 (always before first
% reversal) after the same number of CL trials as on day 6 (first reversal)

day5_fakereversal = cellfun(@(x,y) find(y{5} == y{6}(x{6}),1),all_reversals(reversal_animals),...
    elapsed_CL_trials(reversal_animals),'uni',false);

pre_fakereversal_activity = cellfun(@(df,bhv,fakerev) ...
    df{5}(intersect(find(bhv{5}(:,1)),1:fakerev-1),:,:), ...
    aligned_df_pyr(reversal_animals), ...
    condition_trials_all(reversal_animals),day5_fakereversal,'uni',false);

post_fakereversal_activity_CL = cellfun(@(df,bhv,fakerev) ...
    df{5}(intersect(find(bhv{5}(:,1)),fakerev+1:size(df{5},1)),:,:), ...
    aligned_df_pyr(reversal_animals), ...
    condition_trials_all(reversal_animals),day5_fakereversal,'uni',false);

% Get binary active/inactive
pre_fakereversal_activity_binaryactive = cellfun(@(df) ...
    permute(any(df,2),[1 3 2]), ...
    pre_fakereversal_activity,'uni',false);

post_fakereversal_activity_CL_binaryactive = cellfun(@(df) ...
    permute(any(df,2),[1 3 2]), ...
    post_fakereversal_activity_CL,'uni',false);

% Get fraction binary active/inactive
pre_fakereversal_activity_fracbinaryactive = ...
    cellfun(@nanmean, ...
    pre_fakereversal_activity_binaryactive,'uni',false);

post_fakereversal_activity_CL_fracbinaryactive = ...
    cellfun(@nanmean, ...
    post_fakereversal_activity_CL_binaryactive,'uni',false);

fakereversal_activity_CL_diff = cellfun(@(pre,post) ...
    post-pre,pre_fakereversal_activity_fracbinaryactive, ...
    post_fakereversal_activity_CL_fracbinaryactive,'uni',false);

% Find reversal significance via bootstrap
pre_fakereversal_activity_bootci = ...
    cellfun(@(activity) bootci(10000,@(x) nanmean(x,1),activity), ...
    pre_fakereversal_activity_binaryactive,'uni',false);
post_fakereversal_activity_CL_bootci =  ...
    cellfun(@(activity) bootci(10000,@(x) nanmean(x,1),activity), ...
    post_fakereversal_activity_CL_binaryactive,'uni',false);

% Significance = outside of conf interval AND over 20% in either condition
fakereversal_sigdiff_cells = cellfun(@(pre,post) ...
    -1*(pre(1,:) > post(2,:)) + 1*(post(1,:) > pre(2,:)) .* ...
    (median(pre) > 0.2 | median(post) > 0.2), ...
    pre_fakereversal_activity_bootci,post_fakereversal_activity_CL_bootci,'uni',false);



% Compare fraction of significant cells for fake/real reversal
use_reversal_day = num2cell([6 6 6 7]); % this is because day 6 on animal 6 doesn't register for lack of CL
reversal_fracsig = cellfun(@(x,y) nanmean(x{y}{1} ~= 0), ...
    reversal_sigdiff_cells(reversal_animals),use_reversal_day);
fakereversal_fracsig = cellfun(@(x) nanmean(x ~= 0),fakereversal_sigdiff_cells);

figure;plot([reversal_fracsig;fakereversal_fracsig]);
legend({'1' '2' '3' '6'})
xlabel('Reversal')
ylabel('Fraction of cells')
title('Fake (day 5) vs real reversal comparison')
xlim([0.5 2.5])


